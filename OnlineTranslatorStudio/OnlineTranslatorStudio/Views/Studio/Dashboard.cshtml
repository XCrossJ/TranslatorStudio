@model TranslatorStudioClassLibrary.Class.TranslationData
@using Gem;

@{
    ViewBag.Title = "Translator Studio - Dashboard";
    var percentage = ViewBag.percentage;
    //int percentage = Model.NumberOfLines != 0 ? percentage = ((Model.NumberOfCompletedLines / Model.NumberOfLines) * 100) : 0;

    //List<Furigana> furigana = new List<Furigana>();

    //foreach (var item in Model.RawLines)
    //{
    //    furigana.Add(new Furigana(item));
    //}

}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3">
            <h2>Dashboard</h2>
            <div id="status" class="row">
                <div class="col-xs-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4>Project Details</h4>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <table class="table table-condensed">
                                    <tr>
                                        <th><b>Project Name</b></th>
                                        @*<td>@Html.TextBoxFor(Model => Model.ProjectName, new { @class = "form-control", @onkeypress = "updateProjectName(translationData, this.value)" }) </td>*@
                                        <td><input class="form-control" data-bind="value: ProjectName()"/></td>
                                    </tr>
                                    <tr>
                                        <th>
                                            <b>Current Line</b>
                                        </th>
                                        <td>
                                            <span id="CurrentIndex" data-bind="text: (currentIndex() + 1)"></span> / <span id="NumberOfLines" class="NumberOfLines" data-bind="text: (maxIndex() + 1)"></span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <th><b>Progress</b></th>
                                        <td><span data-bind="text: CompletedLines().length"></span> / <span class="NumberOfLines" data-bind="text: (maxIndex() + 1)"></span></td>
                                    </tr>
                                </table>
                            </div>

                            <div class="row">
                                <div class="progress">
                                    <div id="progressBar" class="progress-bar progress-bar-success progress-bar-striped active" role="progressbar" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100" style="width: @percentage%;">
                                        <span class="sr-only">@percentage% Complete</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-sm-9">
            <div class="col-xs-12">
                <h2>Desk</h2>
                <ul class="nav nav-tabs">
                    <li class="active"><a data-toggle="tab" href="#deskTab">Desk</a></li>
                    <li><a data-toggle="tab" href="#previewTab">Preview</a></li>
                </ul>

                <div class="tab-content">
                    <div id="deskTab" class="tab-pane fade in active">
                        @Html.Partial("_Desk", Model)
                    </div>
                    <div id="previewTab" class="tab-pane fade">
                        @Html.Partial("_Preview", Model)
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>




<script>
    function updateProgress() {
        $("#progressBar").width(@percentage);
    }
</script>